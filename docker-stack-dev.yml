version: "3"

#  visualizer:
#    image: dockersamples/visualizer:stable
#    ports:
#      - "8080:8080"
#    stop_grace_period: 1m30s
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#    deploy:
#      placement:
#        constraints: [node.role == manager]

services:
  redis:
    image: redis:alpine
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
  mongodb:
    image: mvertes/alpine-mongo
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
  mqtt:
    image: toke/mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
  api:
    image: printat-api
    ports:
      - "3000:3000"
    networks:
      - backend
    depends_on:
      - redis
    volumes:
    - ./api/build:/opt/app/build
    - ./api/src:/opt/app/src
    environment:
    - NODE_ENV=development
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
  web:
    image: printat-web
    ports:
      - "3002:3002"
      - "8000:8000"
    networks:
      - backend
    depends_on:
      - api
    volumes:
    - ./web/build:/opt/app/build
    - ./web/src:/opt/app/src
    - ./web/tools:/opt/app/tools
    environment:
    - NODE_ENV=development
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure

networks:
  backend:

volumes:
  D:
